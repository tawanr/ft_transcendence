# Generated by Django 5.0.1 on 2024-01-05 08:25

import django.db.models.deletion
import gameplay.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("game_type", models.CharField(default="pong", max_length=100)),
                ("is_active", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="TournamentPlayer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="gameplay.tournament",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="tournament",
            name="players",
            field=models.ManyToManyField(
                through="gameplay.TournamentPlayer", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="GameRoom",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("player1_name", models.CharField(default="Player1", max_length=100)),
                ("player2_name", models.CharField(default="Player2", max_length=100)),
                ("player1_score", models.IntegerField(default=0)),
                ("player2_score", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("is_finished", models.BooleanField(default=False)),
                ("player1_won", models.BooleanField(default=False)),
                (
                    "game_code",
                    models.CharField(
                        default=gameplay.models.generate_game_code, max_length=10
                    ),
                ),
                ("game_type", models.CharField(default="pong", max_length=100)),
                ("level", models.IntegerField(default=1)),
                ("players", models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                (
                    "tournament",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="gameplay.tournament",
                    ),
                ),
            ],
            options={
                "unique_together": {("game_code", "is_active")},
            },
        ),
    ]
